@model List<Notification>

@foreach(var notification in Model)
{
	TimeSpan time = DateTime.UtcNow.Subtract(notification.DateCreated);
	string displayTime = time switch
	{
		var t when t.TotalDays >= 1 => $"{(int)t.TotalDays} day ago",
		var t when t.TotalHours >= 1 => $"{(int)t.TotalHours} hours ago",
		var t when t.TotalMinutes >= 1 => $"{(int)t.TotalDays} minutes ago",
		_ => "just now"
	};

	string iconName = notification.Type switch
	{
		NotificationType.Favorite => "bookmark-outline",
		NotificationType.Like => "heart-outline",
		NotificationType.Comment => "chatbubbles-outline",
		NotificationType.FriendRequest => "person-add-outline",
		NotificationType.FriendRequestApproved => "person-outline",
		_ => "notifications-outline"
	};

	<div class="relative flex items-center gap-3 p-2 duration-200 rounded-xl pr-10 hover:bg-secondery @(notification.IsRead ? "" : "bg-teal-500/5")">
		<div class="flex item-center gap-2 flex-1 ">
			<ion-icon name ="@iconName" class="text-2xl"></ion-icon>
			<div>
				<p>
					@if (notification.IsRead)
					{
						@notification.Message
					}
					else
					{
						<b class="font-bold mr1">
							@notification.Message
						</b>
					}
				</p>
			</div>
			
			<div class="text-xs text-gray-500 mt-1.5">
				@displayTime
			</div>
			@if (!notification.IsRead)
			{
				<div class="w-2.5 h-2.5 bg-teal-600 rounded-full absolute right-3 top-5" onclick="setNotificationAsRead(@notification.Id)">

				</div>
			}
		</div>
	</div>
}
